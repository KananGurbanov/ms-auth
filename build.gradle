buildscript {
    repositories {
        mavenCentral() // This is commonly used for dependencies
        maven {
            url "https://plugins.gradle.org/m2/" // Include the Gradle Plugin Portal
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:5.1.0.4882" // SonarQube plugin dependency
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'az.edu.turing'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral() // Ensure the Maven Central repository is included
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

apply plugin: "org.sonarqube" // Apply the SonarQube plugin

// SonarQube configuration
sonarqube {
    properties {
        property "sonar.projectKey", "my_project_key" // Replace with your project key
        property "sonar.host.url", "http://192.168.1.7:9000" // Adjust if necessary
        property "sonar.token", "squ_18075d09ad65a1c0258e4cb80b043877a8e67669" // Use if authentication is needed
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.source", "21"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}